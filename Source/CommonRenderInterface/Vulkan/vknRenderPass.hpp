#ifndef VK_RENDER_PASS__HPP
#define VK_RENDER_PASS__HPP
////////////////////////////////////////////////////////////////
// секция PCH
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// секция компиляция файла
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// секция родительского класса
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// секция форвард-декларации
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// секция для остального
////////////////////////////////////////////////////////////////

namespace FE {

	namespace CRI {

		namespace VULKAN {

			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

			inline VKContext CVKRenderPass::getContext(void) const {

				return m_VKNContext;
			}

			//==============================================================
			//==============================================================

			inline uint32_t CVKRenderPass::getWidth(void) const {

				return m_Width;
			}

			//==============================================================
			//==============================================================

			inline uint32_t CVKRenderPass::getHeight(void) const {

				return m_Height;
			}

			//==============================================================
			//==============================================================

			inline uint32_t CVKRenderPass::getSubpassCount(void) const {

				return m_SubpassCount;
			}

			//==============================================================
			//==============================================================

			//inline const VkAttachmentReferenceArrs& CVKRenderPass::getAttachmentColorRefPerSubpass(void) const {

			//	return m_vkAttachmentRefPerSubpassColor;
			//}

			//==============================================================
			//==============================================================

			inline VkRenderPass CVKRenderPass::getVkRenderPass(void) const {

				return m_vkRenderPass;
			}

			//==============================================================
			//==============================================================

			inline const VkFramebufferArr& CVKRenderPass::getVkFramebuffers(void) const {

				return m_vkFramebuffers;
			}

			//==============================================================
			//==============================================================

			inline const VkClearValueArr& CVKRenderPass::getClearValue(void) const {

				return m_vkClearValues;
			}

		} // namespace VULKAN

	} // namespace RENDER

} // namespace FE

#endif // VK_RENDER_PASS__HPP