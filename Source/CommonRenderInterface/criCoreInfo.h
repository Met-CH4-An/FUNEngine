#ifndef CRI_CORE_INFO__H
#define CRI_CORE_INFO__H
////////////////////////////////////////////////////////////////
// секция компиляция файла
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// секция родительского класса
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// секция форвард-декларации
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// секция для остального
////////////////////////////////////////////////////////////////
#include "CommonRenderInterface.h"

namespace FE {

	namespace CRI {

		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		/*!	\brief Исключение возникает если создание CCRICore провалилось.
		*/
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		class e_common_render_interface_create_fail : std::exception {};



		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		/*!	\brief Флаги создания CCRICore.
		*/
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		enum class CRI_CORE_CREATE_FLAGS {

			DEBUG = 0x0000001,		///< Отладочный режим контекста.

		}; // enum class CRI_CORE_CREATE_FLAGS
		DECLARE_ENUM_OPERATIONS(CRI_CORE_CREATE_FLAGS);



		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		/*!	\brief Информация для создания CCRICore.
		*/
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		struct CRI_CORE_CREATE_INFO {

			CRI_CORE_CREATE_FLAGS		m_Flags;		///< Флаги.

		}; // struct CRI_CORE_CREATE_INFO

	} // namespace RENDER

} // namespace FE

#endif // CRI_CORE_INFO__H